name: CI - Real Business Metrics Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-real-metrics:
    runs-on: ubuntu-latest
    container: python:3.9
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        pip install prometheus-client psycopg2-binary pytest requests
    
    - name: Test database connection
      run: |
        python -c "
        import psycopg2
        try:
            conn = psycopg2.connect(
                host='host.docker.internal',
                port=5433,
                database='warehouse', 
                user='airflow',
                password='airflow'
            )
            cursor = conn.cursor()
            cursor.execute('SELECT COUNT(*) FROM bronze_vegetable_prices')
            count = cursor.fetchone()[0]
            print(f'✅ Database connection successful - Bronze table has {count} rows')
            cursor.close()
            conn.close()
        except Exception as e:
            print(f'❌ Database connection failed: {e}')
            exit(1)
        "
    
    - name: Validate script syntax
      run: |
        python -m py_compile scripts/pipeline_metrics.py
        echo "✅ Script syntax is valid"
    
    - name: Test business logic
      run: |
        python -c "
        import sys
        sys.path.append('scripts')
        from pipeline_metrics import get_db_connection
        
        # Test wastage percentage calculation
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute('SELECT AVG(wastage_percent) FROM silver_vegetable_prices WHERE wastage_percent > 0')
        avg_wastage = cursor.fetchone()[0]
        
        if 0 <= avg_wastage <= 100:
            print(f'✅ Business logic valid - Average wastage: {avg_wastage:.2f}%')
        else:
            print(f'❌ Invalid wastage percentage: {avg_wastage}')
            exit(1)
            
        cursor.close()
        conn.close()
        "

    - name: Check pipeline data exists
      run: |
        python -c "
        import psycopg2
        conn = psycopg2.connect(
            host='host.docker.internal',
            port=5433,
            database='warehouse',
            user='airflow',
            password='airflow'
        )
        cursor = conn.cursor()
        
        # Check all layers have data
        cursor.execute('SELECT COUNT(*) FROM bronze_vegetable_prices')
        bronze = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM silver_vegetable_prices')
        silver = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM gold_vegetable_metrics')  
        gold = cursor.fetchone()[0]
        
        print(f'✅ Pipeline data - Bronze: {bronze}, Silver: {silver}, Gold: {gold}')
        
        if bronze == 0 or silver == 0:
            print('❌ Pipeline has no data!')
            exit(1)
            
        cursor.close()
        conn.close()
        "
